<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Blog</title><link>https://erkanerol.github.io/post/</link><description>Recent content in Posts on Blog</description><generator>Hugo -- gohugo.io</generator><language>en-en</language><lastBuildDate>Mon, 04 Jul 2022 10:00:00 +0300</lastBuildDate><atom:link href="https://erkanerol.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Thinking about the complexity of the Kubernetes ecosystem</title><link>https://erkanerol.github.io/post/complexity-of-kubernetes/</link><pubDate>Mon, 04 Jul 2022 10:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/complexity-of-kubernetes/</guid><description>&lt;blockquote>
&lt;p>Disclaimer: I am working for &lt;a href="https://www.giantswarm.io/product">Giant Swarm&lt;/a> as a Platform Engineer. My day-to-day work might have influenced my perspective on this subject since it is pretty related to why/how we help our customers.&lt;/p>
&lt;/blockquote>
&lt;p>Over the years, I faced two different reactions from people who are new to Kubernetes:&lt;/p>
&lt;ol>
&lt;li>&amp;ldquo;Is Kubernetes genuinely that simple? Why doesn&amp;rsquo;t it have X as a built-in feature?&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;Why is Kubernetes so complex? Why do I have to learn so many things to do just simple Y?&amp;rdquo;&lt;/li>
&lt;/ol>
&lt;p>Before learning Kubernetes in detail, they are under the impression that Kubernetes&lt;/p>
&lt;ul>
&lt;li>has all the necessary features of modern infrastructure&lt;/li>
&lt;li>provides what they need perfectly&lt;/li>
&lt;li>is easy to use&lt;/li>
&lt;li>is free&lt;/li>
&lt;/ul>
&lt;p>In this blog post, I am going to explain why it is so hard to achieve these goals at the same time by analyzing the anatomy of Kubernetes ecosystem.&lt;/p></description></item><item><title>Debugging k8s services: 3 tools for 3 scenarios</title><link>https://erkanerol.github.io/post/debugging-k8s-services/</link><pubDate>Sun, 28 Feb 2021 16:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/debugging-k8s-services/</guid><description>&lt;p>While developing/debugging applications that serve services on k8s in production, you need some tools/commands. This blog post explains three different scenarios+tools for you.&lt;/p>
&lt;blockquote>
&lt;p>Please ping me if there is something wrong. &lt;a href="https://twitter.com/erkan_erol">https://twitter.com/erkan_erol&lt;/a>_&lt;/p>
&lt;/blockquote></description></item><item><title>Learning Path: Basics of Container Runtimes</title><link>https://erkanerol.github.io/post/basics-of-container-runtimes/</link><pubDate>Sat, 01 Aug 2020 00:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/basics-of-container-runtimes/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">After a couple of productive hours, now I have a clear understanding of what are the difference/relationship between cgroups, namespaces, runc, containerd, docker, rkt, dockerd, docker-containerd-shim, cri-o, cri, dockershim, gVisor, kata-containers, etc.&lt;/p>&amp;mdash; Erkan Erol (@erkan_erol_) &lt;a href="https://twitter.com/erkan_erol_/status/1252343453402361858?ref_src=twsrc%5Etfw">April 20, 2020&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script></description></item><item><title>I wish pods were fully restartable</title><link>https://erkanerol.github.io/post/restartable-pods/</link><pubDate>Sun, 19 Jul 2020 21:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/restartable-pods/</guid><description>&lt;blockquote>
&lt;p>+Hi Erkan. Pod-X in my cluster is in CrashLoopBackOff. How can I solve this issue?&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>-Ohh:/ Most probably it is because of the known EKS issue. Just restart the pod.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>+How?&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>-Just delete the pod.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>+Really? May I delete any pod in my cluster?&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>-In theory, you can delete any pod of our application. Nevertheless, be careful :D&lt;/p>
&lt;/blockquote>
&lt;p>I don&amp;rsquo;t remember how many times I had this conversation, but I have never thought about whether pods are really restartable or not until recently. When I thought about it deeply, &lt;strong>I noticed that pods are not fully restartable, they are re-creatable or partially restartable.&lt;/strong>&lt;/p>
&lt;br>
&lt;blockquote>
&lt;p>This blog post consists of my understanding and my comments. Please ping me if there is something wrong. &lt;a href="https://twitter.com/erkan_erol">https://twitter.com/erkan_erol&lt;/a>_&lt;/p>
&lt;/blockquote></description></item><item><title>Who sets the IP of a pod?</title><link>https://erkanerol.github.io/post/who-sets-ip-of-a-pod/</link><pubDate>Tue, 14 Jul 2020 22:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/who-sets-ip-of-a-pod/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">Short Quiz (please RT)&lt;br>&lt;br>Who sets the IP of a pod?&lt;/p>&amp;mdash; Erkan Erol (@erkan_erol_) &lt;a href="https://twitter.com/erkan_erol_/status/1282761232987160576?ref_src=twsrc%5Etfw">July 13, 2020&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script></description></item><item><title>How does 'kubectl exec' work?</title><link>https://erkanerol.github.io/post/how-kubectl-exec-works/</link><pubDate>Sun, 25 Aug 2019 19:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/how-kubectl-exec-works/</guid><description>&lt;p>Last Friday, one of my colleagues approached me and asked a question about how to exec a command in a pod with client-go. I didn&amp;rsquo;t know the answer and I noticed that I had never thought about the mechanism in &amp;ldquo;kubectl exec&amp;rdquo;. I had some ideas about how it should be, but I wasn&amp;rsquo;t 100% sure. I noted the topic to check again and I have learnt a lot after reading some blogs, docs and source codes. In this blog post, I am going to share my understanding and findings.&lt;/p>
&lt;blockquote>
&lt;p>Please ping me if there is something wrong. &lt;a href="https://twitter.com/erkan_erol">https://twitter.com/erkan_erol&lt;/a>_&lt;/p>
&lt;/blockquote></description></item><item><title>Yazgıları Birleştirme Enstitüsü</title><link>https://erkanerol.github.io/post/yazgilari-birlestirme-enstitusu/</link><pubDate>Sat, 10 Aug 2019 19:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/yazgilari-birlestirme-enstitusu/</guid><description>&lt;iframe width="100%" height="166" scrolling="no" frameborder="no" allow="autoplay" src="https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/28366936&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true">&lt;/iframe>
&lt;div style="text-align: right">
&lt;br>"The souls of heaven
&lt;br>Are stars at night.
&lt;br>They will guide us on our way,
&lt;br>Until we meet again
&lt;br>Another day."
&lt;/div>
&lt;br>
&lt;p>Kıymetli vatandaşlarım!&lt;/p>
&lt;p>Bugün, buraya, tarihin akışını değiştirecek bu enstitümüzün açılışına hoş geldiniz!&lt;/p>
&lt;p>&lt;em>&lt;strong>&amp;mdash;alkışlar&amp;mdash;&lt;/strong>&lt;/em>&lt;/p></description></item><item><title>Adapting to a software project</title><link>https://erkanerol.github.io/post/adapting-a-project/</link><pubDate>Fri, 26 Apr 2019 22:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/adapting-a-project/</guid><description>&lt;p>Throughout my career, a few times,&lt;/p>
&lt;ul>
&lt;li>I joined a project&lt;/li>
&lt;li>I became one of the main maintainers of the project/a component after a while&lt;/li>
&lt;li>I helped new people to adapt to the project&lt;/li>
&lt;/ul>
&lt;p>The companies were different. The teams were different. The technology stacks were different. However, I realized my approach was similar. I think I can say some things about adapting to a software project. In this blog post, I am going to share &amp;ldquo;my way&amp;rdquo;.&lt;/p></description></item><item><title>Aynısından</title><link>https://erkanerol.github.io/post/ayn%C4%B1s%C4%B1ndan/</link><pubDate>Sun, 26 Nov 2017 20:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/ayn%C4%B1s%C4%B1ndan/</guid><description>&lt;p>Kahvaltımı yapmış, odamı toplamıştım. Sonrasında yeni bulaşık makinasının gideri için gerekli parçaları tespit etmiş, nalbura gidip almış, montajını yapmıştım. Makinayı çalıştırmış, lavoba giderini test etmiştim. Her şey olumluydu ve artık sıradaki işime geçebilirdim: &lt;strong>Berbere gitmek.&lt;/strong>&lt;/p></description></item><item><title>Primitive Takıntısı ve Değer Nesneleri</title><link>https://erkanerol.github.io/post/primitive_obsession/</link><pubDate>Sat, 25 Mar 2017 00:37:43 +0300</pubDate><guid>https://erkanerol.github.io/post/primitive_obsession/</guid><description>&lt;p>Primitive Obsession ünlü &lt;a href="https://www.amazon.com/Refactoring-Improving-Design-Existing-Code/dp/0201485672" target="_blank">Refactoring&lt;/a> kitabındaki kod kokularından biridir. Yazılımcıların karmaşık şeyleri ilkel veri türleri ile ifade etmeye çalışmasını ifade eder. Bu yazıda bu sorunu ve çözümünü ele alacağız.&lt;/p>
&lt;p>&lt;img src="https://erkanerol.github.io/img/primitive.jpg" alt="primitive">&lt;/p>
&lt;center>
&lt;a href="https://dzone.com/articles/primitive-obsession" target="_blank">Görselin Kaynağı&lt;/a>
&lt;/center></description></item><item><title>Ustam: Lemi Orhan Ergin</title><link>https://erkanerol.github.io/post/lemi/</link><pubDate>Sun, 12 Mar 2017 22:24:38 +0300</pubDate><guid>https://erkanerol.github.io/post/lemi/</guid><description>&lt;p>Aslında bir video çekmekti planım lakin beceremedim bir türlü☹️Ben de yazmaya karar verdim. Umarım hislerimi ve düşüncelerimi düzgün ifade edebilirim.&lt;/p>
&lt;p>&lt;br>&lt;br>&lt;/p>
&lt;p>&lt;img src="https://avatars0.githubusercontent.com/u/1199195?v=3&amp;amp;s=400" alt="lemi-avatar">&lt;/p>
&lt;blockquote>
&lt;p>Bugün (13 Mart) Lemi abinin, &lt;a href="https://twitter.com/lemiorhan" target="_blank">Lemi Orhan Ergin&amp;rsquo;in&lt;/a> doğum günü. En son söyleyeceğim sözü ilk başta söyleyeyim: İyi doğdun Lemi abi. İyi ki varsın!&lt;/p>
&lt;/blockquote></description></item><item><title>Yazılımcı Fanatikliğinin Anatomisi</title><link>https://erkanerol.github.io/post/yazilimci-fanatikliginin-anatomisi/</link><pubDate>Sat, 25 Feb 2017 20:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/yazilimci-fanatikliginin-anatomisi/</guid><description>&lt;p>&lt;em>&lt;strong>Feragatname (Disclaimer):&lt;/strong>&lt;/em> İşbu blog yazısındaki her şey şahsi görüşlerim ve çıkarımlarımdan ibaret olup, herhangi bir kaynağa dayanmamaktadır. Yazıdaki ölçü vurgusuna dikkat edilmesi önemle rica olunur.&lt;/p>
&lt;h3 id="nereden-çıktı-bu-yazı">Nereden çıktı bu yazı?&lt;/h3>
&lt;p>&lt;a href="https://www.meetup.com/Software-Craftsmanship-Turkey/" target="_blank">Türkiye Yazılım Ustalığı &lt;/a> topluluğumuz için &lt;a href="https://www.meetup.com/Software-Craftsmanship-Turkey/pages/20984357/Topluluk_Davran%C4%B1%C5%9F_Kurallar%C4%B1/" target="_blank">Topluluk Davranış Kuralları&amp;rsquo;nı &lt;/a> İngilizce örneğinden çevirirken bir ifadeye rastladım.&lt;/p>
&lt;blockquote>
&lt;p>Topluluğumuz cinsiyet, cinsel kimlik, cinsel tercih, yaş, engellilik hali, fiziksel görünüm, vücut ölçüleri, ırk ve din (veya dinsizlik), &lt;em>&lt;strong>teknolojik tercihler&lt;/strong>&lt;/em> ayrımı yapmaksızın herkese rahatsızlıktan uzak bir deneyim sunmaya adanmıştır.&lt;/p>
&lt;/blockquote>
&lt;p>Teknolojik tercihleri yüzünden ayrımcılığa maruz kalan var mıdır bilmiyorum ama bazı yazılımcıların &lt;em>&lt;strong>&amp;ldquo;fanatik&amp;rdquo;&lt;/strong>&lt;/em> olarak nitelendirilebileceğini biliyorum. Bu yazılım camiasında da bilinen bir durum zaten. Belirli bir ölçüye kadar güzel ve sevimli olan bu fan olma hali bir yerden sonra büyük sorunlara neden oluyor. Bu konu hakkında biraz kafa yordum ve düşüncelerimi bu yazıda ifade etmeye çalışacağım.&lt;/p></description></item><item><title>Hash Fonksiyonları</title><link>https://erkanerol.github.io/post/hash-functions/</link><pubDate>Sat, 11 Feb 2017 00:31:42 +0300</pubDate><guid>https://erkanerol.github.io/post/hash-functions/</guid><description>&lt;p>Not: İşbu yazı Wikipedia kullanılarak yazılmıştır. Arzu edenler &lt;a href="https://en.wikipedia.org/wiki/Hash_function" target="_blank">şu&lt;/a> link üzerinden devam edebilir.&lt;/p>
&lt;p>Hash fonksiyonları belirli özellikleri sağlayan fonksiyonlardır. Bu özelliklere değinmeden önce fonksiyonları kısaca hatırlatmak istiyorum.&lt;/p></description></item><item><title>Bir takım teoriler, kanunlar ve ilkeler</title><link>https://erkanerol.github.io/post/some-laws-and-principles/</link><pubDate>Sat, 07 Jan 2017 13:42:18 +0300</pubDate><guid>https://erkanerol.github.io/post/some-laws-and-principles/</guid><description>&lt;p>Bir şekilde öğrendiğim bir takım teoriler, kanunlar, ilkeler var. Bunları çevremdeki insanlarla paylaştığımda ilgi çektiklerini ve çok bilinmediklerini farkettim. Ben de bir blog yazısı ile bunları kısa kısa ve basit cümleler ile paylaşayım dedim. Bu yazıda 5 tanesine değineceğim. Başlıklara wikipedia linklerini ekledim. Formal şekillerini okumak isteyenler oradan devam edebilir.&lt;/p></description></item><item><title>Yazılım Bağlamında Cohesion ve Coupling Kavramları Üzerine</title><link>https://erkanerol.github.io/post/cohesion-coupling/</link><pubDate>Thu, 29 Sep 2016 22:27:32 +0300</pubDate><guid>https://erkanerol.github.io/post/cohesion-coupling/</guid><description>&lt;h2 id="giriş">Giriş&lt;/h2>
&lt;p>Bu aralar Software Craftsmanship alanında okumalar yapmaya ve vakit buldukça konuşmalar izlemeye çalışıyorum. Yazılımın temel prensipleri ve kavramları bu alanın ana başlıklarından. Ben de okuduğum, anlamaya çalıştığım bu 2 kavramı çok çok basit şekilde, kendimce açıklamaya çalışacağım.&lt;/p></description></item><item><title>Dry Prensibi</title><link>https://erkanerol.github.io/post/dryprinciple/</link><pubDate>Thu, 02 Jun 2016 20:23:06 +0300</pubDate><guid>https://erkanerol.github.io/post/dryprinciple/</guid><description>&lt;blockquote>
&lt;p>Every piece of knowledge must have a single, unambiguous, authoritative representation within a system.&lt;/p>
&lt;/blockquote>
&lt;p>NOT: Bu yazı The Pragmatic Programmer kitabındaki &amp;ldquo;The Evils of Duplication&amp;rdquo; bölümünden yararlanılarak yazılmıştır.&lt;/p>
&lt;h2 id="programlama-prensibi">Programlama Prensibi&lt;/h2>
&lt;p>DRY&lt;/p>
&lt;p>Keep It Dry&lt;/p>
&lt;p>Keep Things Dry&lt;/p></description></item><item><title>YAGNI Prensibi</title><link>https://erkanerol.github.io/post/yagniprinciple/</link><pubDate>Wed, 25 May 2016 22:46:50 +0300</pubDate><guid>https://erkanerol.github.io/post/yagniprinciple/</guid><description>&lt;p>Not: Bu yazı Martin Fowler&amp;rsquo;ın YAGNI yazısının özeti ve tercümesi niteliğindedir.&lt;/p>
&lt;h2 id="programlama-prensibi">Programlama Prensibi&lt;/h2>
&lt;p>YAGNI&lt;/p>
&lt;h2 id="açılımlar">Açılımlar&lt;/h2>
&lt;p>You Aren’t Gonna Need It
You Aint Gonna Need It&lt;/p>
&lt;h2 id="açıklama">Açıklama&lt;/h2>
&lt;p>YAGNI, Extreme programlamanın prensiplerinden biridir. Gelecekte lazım olacak düşüncesi ile bir takım özelliklerin geliştirilmemesi gerektiğini savunur. Şimdi bir örnek üzerinden bu prensibi anlamaya çalışalım.&lt;/p></description></item><item><title>KISS Prensibi</title><link>https://erkanerol.github.io/post/kiss/</link><pubDate>Sat, 14 May 2016 16:15:53 +0300</pubDate><guid>https://erkanerol.github.io/post/kiss/</guid><description>&lt;blockquote>
&lt;p>Basitlik nihai karmaşıklıktır.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://erkanerol.github.io/img/Simplicity.jpg" alt="Simplicity">&lt;/p></description></item><item><title>2 General/Ordu Problemi</title><link>https://erkanerol.github.io/post/two-army-problem/</link><pubDate>Mon, 24 Aug 2015 20:31:00 +0200</pubDate><guid>https://erkanerol.github.io/post/two-army-problem/</guid><description>&lt;p>Bu yazıda Two Generals' Problem ya da The Two Army Problem olarak anılan problemi anlatmaya çalışacağım.&lt;/p></description></item></channel></rss>