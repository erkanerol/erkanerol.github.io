<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>EN on Blog</title><link>https://erkanerol.github.io/categories/en/</link><description>Recent content in EN on Blog</description><generator>Hugo -- gohugo.io</generator><language>tr-tr</language><lastBuildDate>Mon, 04 Jul 2022 10:00:00 +0300</lastBuildDate><atom:link href="https://erkanerol.github.io/categories/en/index.xml" rel="self" type="application/rss+xml"/><item><title>Thinking about the complexity of the Kubernetes ecosystem</title><link>https://erkanerol.github.io/post/complexity-of-kubernetes/</link><pubDate>Mon, 04 Jul 2022 10:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/complexity-of-kubernetes/</guid><description>&lt;blockquote>
&lt;p>Disclaimer: I am working for &lt;a href="https://www.giantswarm.io/product">Giant Swarm&lt;/a> as a Platform Engineer. My day-to-day work might have influenced my perspective on this subject since it is pretty related to why/how we help our customers.&lt;/p>
&lt;/blockquote>
&lt;p>Over the years, I faced two different reactions from people who are new to Kubernetes:&lt;/p>
&lt;ol>
&lt;li>&amp;ldquo;Is Kubernetes genuinely that simple? Why doesn&amp;rsquo;t it have X as a built-in feature?&amp;rdquo;&lt;/li>
&lt;li>&amp;ldquo;Why is Kubernetes so complex? Why do I have to learn so many things to do just simple Y?&amp;rdquo;&lt;/li>
&lt;/ol>
&lt;p>Before learning Kubernetes in detail, they are under the impression that Kubernetes&lt;/p>
&lt;ul>
&lt;li>has all the necessary features of modern infrastructure&lt;/li>
&lt;li>provides what they need perfectly&lt;/li>
&lt;li>is easy to use&lt;/li>
&lt;li>is free&lt;/li>
&lt;/ul>
&lt;p>In this blog post, I am going to explain why it is so hard to achieve these goals at the same time by analyzing the anatomy of Kubernetes ecosystem.&lt;/p></description></item><item><title>Debugging k8s services: 3 tools for 3 scenarios</title><link>https://erkanerol.github.io/post/debugging-k8s-services/</link><pubDate>Sun, 28 Feb 2021 16:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/debugging-k8s-services/</guid><description>&lt;p>While developing/debugging applications that serve services on k8s in production, you need some tools/commands. This blog post explains three different scenarios+tools for you.&lt;/p>
&lt;blockquote>
&lt;p>Please ping me if there is something wrong. &lt;a href="https://twitter.com/erkan_erol">https://twitter.com/erkan_erol&lt;/a>_&lt;/p>
&lt;/blockquote></description></item><item><title>Learning Path: Basics of Container Runtimes</title><link>https://erkanerol.github.io/post/basics-of-container-runtimes/</link><pubDate>Sat, 01 Aug 2020 00:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/basics-of-container-runtimes/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">After a couple of productive hours, now I have a clear understanding of what are the difference/relationship between cgroups, namespaces, runc, containerd, docker, rkt, dockerd, docker-containerd-shim, cri-o, cri, dockershim, gVisor, kata-containers, etc.&lt;/p>&amp;mdash; Erkan Erol (@erkan_erol_) &lt;a href="https://twitter.com/erkan_erol_/status/1252343453402361858?ref_src=twsrc%5Etfw">April 20, 2020&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script></description></item><item><title>I wish pods were fully restartable</title><link>https://erkanerol.github.io/post/restartable-pods/</link><pubDate>Sun, 19 Jul 2020 21:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/restartable-pods/</guid><description>&lt;blockquote>
&lt;p>+Hi Erkan. Pod-X in my cluster is in CrashLoopBackOff. How can I solve this issue?&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>-Ohh:/ Most probably it is because of the known EKS issue. Just restart the pod.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>+How?&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>-Just delete the pod.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>+Really? May I delete any pod in my cluster?&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>-In theory, you can delete any pod of our application. Nevertheless, be careful :D&lt;/p>
&lt;/blockquote>
&lt;p>I don&amp;rsquo;t remember how many times I had this conversation, but I have never thought about whether pods are really restartable or not until recently. When I thought about it deeply, &lt;strong>I noticed that pods are not fully restartable, they are re-creatable or partially restartable.&lt;/strong>&lt;/p>
&lt;br>
&lt;blockquote>
&lt;p>This blog post consists of my understanding and my comments. Please ping me if there is something wrong. &lt;a href="https://twitter.com/erkan_erol">https://twitter.com/erkan_erol&lt;/a>_&lt;/p>
&lt;/blockquote></description></item><item><title>Who sets the IP of a pod?</title><link>https://erkanerol.github.io/post/who-sets-ip-of-a-pod/</link><pubDate>Tue, 14 Jul 2020 22:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/who-sets-ip-of-a-pod/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">Short Quiz (please RT)&lt;br>&lt;br>Who sets the IP of a pod?&lt;/p>&amp;mdash; Erkan Erol (@erkan_erol_) &lt;a href="https://twitter.com/erkan_erol_/status/1282761232987160576?ref_src=twsrc%5Etfw">July 13, 2020&lt;/a>&lt;/blockquote> &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8">&lt;/script></description></item><item><title>How does 'kubectl exec' work?</title><link>https://erkanerol.github.io/post/how-kubectl-exec-works/</link><pubDate>Sun, 25 Aug 2019 19:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/how-kubectl-exec-works/</guid><description>&lt;p>Last Friday, one of my colleagues approached me and asked a question about how to exec a command in a pod with client-go. I didn&amp;rsquo;t know the answer and I noticed that I had never thought about the mechanism in &amp;ldquo;kubectl exec&amp;rdquo;. I had some ideas about how it should be, but I wasn&amp;rsquo;t 100% sure. I noted the topic to check again and I have learnt a lot after reading some blogs, docs and source codes. In this blog post, I am going to share my understanding and findings.&lt;/p>
&lt;blockquote>
&lt;p>Please ping me if there is something wrong. &lt;a href="https://twitter.com/erkan_erol">https://twitter.com/erkan_erol&lt;/a>_&lt;/p>
&lt;/blockquote></description></item><item><title>Adapting to a software project</title><link>https://erkanerol.github.io/post/adapting-a-project/</link><pubDate>Fri, 26 Apr 2019 22:00:00 +0300</pubDate><guid>https://erkanerol.github.io/post/adapting-a-project/</guid><description>&lt;p>Throughout my career, a few times,&lt;/p>
&lt;ul>
&lt;li>I joined a project&lt;/li>
&lt;li>I became one of the main maintainers of the project/a component after a while&lt;/li>
&lt;li>I helped new people to adapt to the project&lt;/li>
&lt;/ul>
&lt;p>The companies were different. The teams were different. The technology stacks were different. However, I realized my approach was similar. I think I can say some things about adapting to a software project. In this blog post, I am going to share &amp;ldquo;my way&amp;rdquo;.&lt;/p></description></item></channel></rss>